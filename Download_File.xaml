<Activity mc:Ignorable="sap sap2010" x:Class="Download_File" this:Download_File.in_SiteName="Mail_Manipulation" this:Download_File.in_DriveName="Documents" this:Download_File.in_strFileName="Minute_10_27_2022.docx" this:Download_File.in_strFileFolder="Minutes" this:Download_File.in_strDownloadPath="C:\Temp" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SiteName" Type="InArgument(x:String)" />
    <x:Property Name="in_DriveName" Type="InArgument(x:String)" />
    <x:Property Name="in_strFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_strFileFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_strDownloadPath" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>612,3450</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Download_File_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Download_File" sap:VirtualizedContainerService.HintSize="596.6666666666666,3385.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="New_FileName" />
      <Variable x:TypeArguments="x:String" Name="Drive_Folder" />
      <Variable x:TypeArguments="x:String" Name="strSiteId" />
      <Variable x:TypeArguments="x:String" Name="strDriveId" />
      <Variable x:TypeArguments="x:String" Name="strAppId" />
      <Variable x:TypeArguments="x:String" Name="strSecretClient" />
      <Variable x:TypeArguments="x:String" Name="strTenantId" />
      <Variable x:TypeArguments="x:String" Name="AuthToken" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonAuthToken" />
      <Variable x:TypeArguments="x:String" Name="strAuthToken" />
      <Variable x:TypeArguments="x:String" Name="strDownloadUrl" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Get New Name File" sap:VirtualizedContainerService.HintSize="534.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[New_FileName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">NewFileNameTest</InArgument>
      </Assign.Value>
    </Assign>
    <ui:GetRobotAsset AssetName="TenantId" CacheStrategy="None" DisplayName="Get TenantId" sap:VirtualizedContainerService.HintSize="534.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[strTenantId]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="AppId" CacheStrategy="None" DisplayName="Get AppId" sap:VirtualizedContainerService.HintSize="534.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[strAppId]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <ui:GetRobotAsset AssetName="SecretClient" CacheStrategy="None" DisplayName="Get ClientSecret" sap:VirtualizedContainerService.HintSize="534.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
      <ui:GetRobotAsset.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetRobotAsset.TimeoutMS>
      <ui:GetRobotAsset.Value>
        <OutArgument x:TypeArguments="x:String">[strSecretClient]</OutArgument>
      </ui:GetRobotAsset.Value>
    </ui:GetRobotAsset>
    <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" AuthenticationType="None" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Graph Auth Token" EnableSSLVerification="True" EndPoint="[&quot;https://login.microsoftonline.com/&quot; + strTenantId +&quot;/oauth2/token&quot;]" sap:VirtualizedContainerService.HintSize="534.6666666666666,72" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[AuthToken]" TimeoutMS="6000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Cookies>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Cookies>
      <ui:HttpClient.Headers>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <InArgument x:TypeArguments="x:String" x:Key="grant_type">client_credentials</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="client_id">[strAppId]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="client_secret">[strSecretClient]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="scope">https://graph.microsoft.com</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="resource">https://graph.microsoft.com</InArgument>
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="534.6666666666666,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[jsonAuthToken]" JsonString="[AuthToken]" />
    <Assign DisplayName="Assign strAuthToken" sap:VirtualizedContainerService.HintSize="534.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strAuthToken]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[jsonAuthToken("access_token").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Initial Downloading Message" sap:VirtualizedContainerService.HintSize="534.6666666666666,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Downloading File &quot; + New_FileName + &quot; with MsGraph ... &quot;]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GetSiteId.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="534.6666666666666,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="GetSiteId.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="Site_Name">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SiteName" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Site_Id">
          <VisualBasicReference x:TypeArguments="x:String" ExpressionText="strSiteId" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Filter siteId from the api answer" sap:VirtualizedContainerService.HintSize="534.6666666666666,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strSiteId]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[split(strSiteId,",")(1)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GetDriveId.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="534.6666666666666,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="GetDriveId.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="Drive_Name">
          <Literal x:TypeArguments="x:String">Documents</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Site_Id">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strSiteId" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Drive_Id">
          <VisualBasicReference x:TypeArguments="x:String" ExpressionText="strDriveId" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Sequence sap2010:Annotation.AnnotationText="Every file has a download URL parameter that can be used to easily download the file" DisplayName="Get File Download URL" sap:VirtualizedContainerService.HintSize="534.6666666666666,1637.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strRequestResults" />
        <Variable x:TypeArguments="x:Int32" Name="intRequestStatus" />
        <Variable x:TypeArguments="njl:JObject" Name="objJSON" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Get File" EnableSSLVerification="True" EndPoint="[&quot;https://graph.microsoft.com/v1.0/sites/&quot;+strSiteId+&quot;/drives/&quot;+strDriveId+&quot;/root:/&quot;+in_strFileFolder+&quot;/&quot;+in_strFileName]" sap:VirtualizedContainerService.HintSize="472.6666666666667,72" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="GET" Result="[strRequestResults]" StatusCode="[intRequestStatus]" TimeoutMS="15000">
        <ui:HttpClient.Attachments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Attachments>
        <ui:HttpClient.Cookies>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Cookies>
        <ui:HttpClient.Headers>
          <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + strAuthToken]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">Application/Json</InArgument>
        </ui:HttpClient.Headers>
        <ui:HttpClient.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Parameters>
        <ui:HttpClient.UrlSegments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.UrlSegments>
      </ui:HttpClient>
      <ui:CheckTrue DisplayName="Check Status HTTP Request (Should be 200)" ErrorMessage="[&quot;Wrong HTTP Request Response for the MSGraph Authentication,&quot; + environment.NewLine + _&#xA;&quot;Check the Client IP and Refsh Token: &quot; + If(intRequestStatus&gt;299,strRequestResults,&quot;&quot;)]" Expression="[intRequestStatus&gt;= 200 and intRequestStatus&lt;299]" sap:VirtualizedContainerService.HintSize="472.6666666666667,132" sap2010:WorkflowViewState.IdRef="CheckTrue_1" />
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON results" sap:VirtualizedContainerService.HintSize="472.6666666666667,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[objJSON]" JsonString="[strRequestResults]" />
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="472.6666666666667,324.6666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Try>
          <Assign DisplayName="Extract Id of Drive that matches Argument" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[strDownloadUrl]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[objJSON("@microsoft.graph.downloadUrl").ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
              <Throw Exception="[new SystemException(&quot;Unable to find a file called &quot;+in_strFileName +&quot; in the site &quot;+in_SiteName+&quot;\&quot;+in_DriveName+&quot;\&quot; +&quot;while trying to Download a file. Please Check the values and the call&quot;)]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="472.6666666666667,278.6666666666667" sap2010:WorkflowViewState.IdRef="TryCatch_2">
        <TryCatch.Try>
          <ui:DeleteFileX DisplayName="Delete Old File" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[in_strDownloadPath+&quot;/&quot;+in_strFileName]" />
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,105.33333333333333" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ActivityAction x:TypeArguments="s:Exception">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
              </ActivityAction.Argument>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
      </TryCatch>
      <ui:HttpClient Body="{x:Null}" ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" BodyFormat="application/xml" DisplayName="Download File" EnableSSLVerification="True" EndPoint="[strDownloadUrl]" sap:VirtualizedContainerService.HintSize="472.6666666666667,72" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="GET" ResourcePath="[path.combine(in_strDownloadPath,in_strFileName)]" Result="[strRequestResults]" StatusCode="[intRequestStatus]" TimeoutMS="15000">
        <ui:HttpClient.Attachments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Attachments>
        <ui:HttpClient.Cookies>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Cookies>
        <ui:HttpClient.Headers>
          <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + strAuthToken]</InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">Application/Json</InArgument>
        </ui:HttpClient.Headers>
        <ui:HttpClient.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.Parameters>
        <ui:HttpClient.UrlSegments>
          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
        </ui:HttpClient.UrlSegments>
      </ui:HttpClient>
      <ui:CheckTrue DisplayName="Check Status HTTP Request (Should be 200)" ErrorMessage="[&quot;Wrong HTTP Request Response for the MSGraph Authentication,&quot; + environment.NewLine + _&#xA;&quot;Check the Client IP and Refsh Token: &quot; + If(intRequestStatus&gt;299,strRequestResults,&quot;&quot;)]" Expression="[intRequestStatus&gt;= 200 and intRequestStatus&lt;299]" sap:VirtualizedContainerService.HintSize="472.6666666666667,132" sap2010:WorkflowViewState.IdRef="CheckTrue_2" />
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="472.6666666666667,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[in_strFileName + &quot; downloaded successfully!&quot;]" />
    </Sequence>
  </Sequence>
</Activity>